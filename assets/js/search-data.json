{
  
    
  
    
  
    
  
    
  
    
  
    
  
    
  
    
  
    
  
    
        "post9": {
            "title": "Techdebt",
            "content": "Hidden Technical Debts in Churn Prediction Systems . Montreal AI Symposium, 2018 . Co-Authors: Nikhil Saldanha, Raman Shrivastava . Abstract . Traditionally, businesses have defined churn simply as the loss of customers of a product or service that they provide. This definition is vague since it fails to specify who a customer is and the event that defines churn. The use of a lagging indicator of churn, such as cancellation of a subscription, renders the prediction inactionable since it is too late to prevent the churn. Further, if the business provides a non-contractual service, identification of an event that intersects well with business and users intent becomes tricky. . We have improved on this traditional definition by creating a framework for defining churn across various businesses. We start by defining the active users, these are the users who have performed a key revenue-generating event for the business in the past. The next step is to select the critical event for churn, we formulate churn as the absence of this event over a period of time. However, this definition also has its drawbacks since the constant time interval across users may not be very accurate. In order to solve this, we can formulate the problem as a ranking problem where users are ranked by the time taken to perform the critical event. Users who take longer to perform the critical event are likely to be “more churned” than others who take lesser time. . We propose to model churn prediction as a supervised machine learning problem where we predict the churn risk(probability that a user is likely to churn) given a time series data of the user’s behavior and the model parameters. Features relevant to user behaviour from the platform are fed into a RNN. In order to feed the data in a RNN, the features are aggregated over smaller time windows based on frequency of user activity. Absence of the critical event in a period following the prediction is labeled as churn and presence is labeled as not churn. . The churn prediction itself is not very useful for a business since ultimately, the company’s goal is to retain these users by taking a set of actions. To effectively take actions, the right context must come from the predictions themselves. In addition to this, the cost of retention must be considered due to a limited budget. All this means that churn predictions need to be trustworthy and correlate well with the features that are used to make the prediction in order for them to be actionable. In the past, LIME has been proposed as a way to attribute predictions to specific features in simple Feedforward and CNNs and build trust in the predictions. We propose variations to LIME and DeepLIFT to better suit multivariate time series data for RNNs. . Conventionally, models are evaluated using metrics like accuracy, ROC AUC, F1 Score for predictions on a hold out set. While these metrics give a good overview of model performance, in practice, they tend to be misleading due to business constraints. Since churn predictions are a means to take preventive actions, their success depends on the success of the actions. The model may predict very accurately for users who are the hardest to retain but is ultimately limited by the effectiveness of the actions. Very often the model performs well on low-value users but fails to perform well on high-value users, resulting in a net loss of revenue. Models with good performance on average may have hidden failure models that are especially insidious when used in production which may introduce long-term biases in the model. . Slicing metrics allows us to analyze the performance of a model on a more granular level. Usually, metrics are sliced by a particular feature value, which highlights the performance of the model on data having only that subset of feature values. We propose that along with slicing metrics by feature value, slicing metrics by customer segment becomes crucial to the evaluation of churn prediction models due to the variation in data distribution that can be observed across these segments. This manner of slicing allows us to develop specific features for specific customer segments and reduce negative bias towards outlying or minority segments which are usually the highest value users of any product. . Contributions . Converting churn from classification to ranking problems which outputs a distribution from which churn probability can be sampled based on different windows. . | Using time-series user events to predict user behaviour by LSTM models. . | Adding multi-variate time-series data support to LIME for explanation of feature correlations to churn. . | Model performance evaluation on different segments of customer which reduces bias and provides business value by performing better on high-value customers. . | .",
            "url": "https://shakti.dev/2018/01/01/techdebt.html",
            "relUrl": "/2018/01/01/techdebt.html",
            "date": " • Jan 1, 2018"
        }
        
    
  
    
        ,"post10": {
            "title": "Prfcm",
            "content": "A Cloud Intrusion Detection System Using Novel PRFCM Clustering and KNN Based Dempster-Shafer Rule . International Journal of Cloud Applications and Computing, 6(4), 18-35 . Co-Authors: Partha Ghosh, Santanu Phadikar . [ Paper ] [ Code ] . Abstract . Cloud computing has established a new horizon in the field of Information Technology. Due to the large number of users and extensive utilization, the Cloud computing paradigm attracts intruders who exploit its vulnerabilities. To secure the Cloud environment from such intruders an Intrusion Detection System (IDS) is required. In this paper the authors have proposed an anomaly based IDS which classifies an incoming connection by taking the deviation of it from the normal behaviors. The proposed method uses a novel Penalty Reward based Fuzzy C-Means (PRFCM) clustering algorithm to generate a rule set and the best rule set is extracted from it using a modified approach for KNN algorithm. This best rule set is used in evidential reasoning of Dempster Shafer Theory for classification. The IDS has been trained and tested with NSL-KDD dataset for performance evaluation. The results prove the proposed IDS to be highly efficient and reliable. .",
            "url": "https://shakti.dev/2017/01/01/prfcm.html",
            "relUrl": "/2017/01/01/prfcm.html",
            "date": " • Jan 1, 2017"
        }
        
    
  
    
        ,"post11": {
            "title": "Mrmr",
            "content": "An Improved Intrusion Detection System to Preserve Security in Cloud Environment . International Journal of Information Security and Privacy, 14(1), 67-80 . Co-Authors: Partha Ghosh, Sumit Biswas, Santanu Phadikar . [ Paper ] . Abstract . Cloud computing, also known as on-demand computing, provides different kinds of services for the users. As the name suggests, its increasing demand makes it prone to various intruders affecting the privacy and integrity of the data stored in the cloud. To cope with this situation, intrusion detection systems (IDS) are implemented in the cloud. An effective IDS constitutes of less time-consuming algorithm with less space complexity and higher accuracy. To do so, the number of features are reduced while maintaining minimal loss of information. In this paper, the authors have proposed a model by which the features are selected on the basis of mutual information gain among correlated features. To achieve this, they first group the features according to the correlativity. Then from each group, the features with the highest mutual information gain in their respective groups are selected. This led them to a reduced feature set which provides quick learning and thus produces a better IDS that would secure the data in the cloud. .",
            "url": "https://shakti.dev/2017/01/01/mrmr.html",
            "relUrl": "/2017/01/01/mrmr.html",
            "date": " • Jan 1, 2017"
        }
        
    
  
    
        ,"post12": {
            "title": "Mcss",
            "content": "Feature Selection Using Modified Charged System Search for Intrusion Detection Systems in Cloud Environment . International Journal of Control Theory and Applications, 9(41), 1012-1021 . Co-Authors: Partha Ghosh, Rupesh Kumar, Santanu Phadikar . [ Paper ] [ Code ] . Abstract . Cloud Computing is one of the most disruptive technology of modern age. It has revolutionized the concept of scalable services offered to the users over Internet. As a result of its extensive use, the vulnerabilities present in Cloud owes a threat to its security. Thus an Intrusion Detection System (IDS) is necessary in order to efficiently detect intrusions and protect the Cloud. The amount of incoming traffic is generally huge and it becomes necessary to reduce its volume by selecting only the relevant features for detecting intrusions. In this paper the authors have proposed a Modified-Charged-System-Search (MCSS) algorithm for feature selection. The proposed algorithm effectively manages the exploration-exploitation tradeoff and is fast in convergence. The selected features improve accuracy of the IDS and makes it more reliable. The proposed model is evaluated on KDD Cup 99 and NSL-KDD dataset. The results prove that MCSS algorithm is successful in selecting optimal feature subset for proposed IDS. .",
            "url": "https://shakti.dev/2017/01/01/mcss.html",
            "relUrl": "/2017/01/01/mcss.html",
            "date": " • Jan 1, 2017"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About Me",
          "content": ". Hello World! I am a ML Engineer working on finding solutions with Machine Learning for real-world problems. My mission is to solve learning to act problems (like planning and optimization) using AI. . I am interested in key topics related to Deep Reinforcement Learning, Evolutionary Algortihms and Causal Inference. I have also done some work in domains like Computer Vision and NLP. . At times I like building things using web technologies like Tornado and NodeJS. Also, I know my way around data processing systems like Spark and Kafka. . You can find me lurking around Reddit, HN and Twitter. And when not doing that, listening to podcasts, cooking or reading Star Wars Wookieepedia, I am. .",
          "url": "https://shakti.dev/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
      ,"page3": {
          "title": "Projects",
          "content": "One-Shot Signature Recognition One-shot offline signature verification usingSiamese CNNandtriplet loss. Users are able to upload a positive sample of their signature which can be used to verify if a newsamples matches with original one or not. . RL Algorithms from Scatch Implementation of algorithms like DQN, REINFORCE, A3C, PPO and SAC from scratch by going over research papers. .",
          "url": "https://shakti.dev/projects/",
          "relUrl": "/projects/",
          "date": ""
      }
      
  

  
      ,"page4": {
          "title": "Research",
          "content": "Posters . Hidden Technical Debts in Churn Prediction Systems Nikhil Saldanha, Shivam Shakti, Raman Shrivastava. Montreal AI Symposium 2018 | . Journals . A Cloud Intrusion Detection System Using Novel PRFCM Clustering and KNN Based Dempster-Shafer Rule Partha Ghosh, Shivam Shakti, Santanu Phadikar. International Journal of Cloud Applications and Computing, 6(4), 18-35 . | Feature Selection Using Modified Charged System Search for Intrusion Detection Systems in Cloud Environment Shivam Shakti, Partha Ghosh, Rupesh Kumar, Santanu Phadikar. International Journal of Control Theory and Applications, 9(41), 1012-1021 . | An Improved Intrusion Detection System to Preserve Security in Cloud Environment Partha Ghosh, Sumit Biswas, Shivam Shakti, Santanu Phadikar. International Journal of Information Security and Privacy, 14(1), 67-80 . | .",
          "url": "https://shakti.dev/research/",
          "relUrl": "/research/",
          "date": ""
      }
      
  

  
  

  

  
  

  

  
  

  
  

  
  

  
      ,"page12": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://shakti.dev/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}